{"ast":null,"code":"import { types } from \"../types/types\";\nimport moment from 'moment';\nconst initialState = {\n  events: [{\n    title: 'Birthday',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    notes: 'Buy cake',\n    user: {\n      _id: '123',\n      name: 'Fer'\n    }\n  }],\n  activeEvent: null\n};\nexport const calReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return { ...state,\n        activeEvent: action.payload\n      };\n\n    case types.eventAddNew:\n      return;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/f/Documents/curso-react/09-calendar-app/src/reducers/calReducer.js"],"names":["types","moment","initialState","events","title","start","toDate","end","add","notes","user","_id","name","activeEvent","calReducer","state","action","type","eventSetActive","payload","eventAddNew"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAC,CAAC;AACNC,IAAAA,KAAK,EAAE,UADD;AAENC,IAAAA,KAAK,EAAEJ,MAAM,GAAGK,MAAT,EAFD;AAGNC,IAAAA,GAAG,EAAEN,MAAM,GAAGO,GAAT,CAAa,CAAb,EAAgB,OAAhB,EAAyBF,MAAzB,EAHC;AAING,IAAAA,KAAK,EAAC,UAJA;AAKNC,IAAAA,IAAI,EAAC;AACHC,MAAAA,GAAG,EAAC,KADD;AAEHC,MAAAA,IAAI,EAAC;AAFF;AALC,GAAD,CADY;AAWnBC,EAAAA,WAAW,EAAC;AAXO,CAArB;AAgBA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAE1D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKjB,KAAK,CAACkB,cAAX;AACE,aAAO,EACH,GAAGH,KADA;AAELF,QAAAA,WAAW,EAACG,MAAM,CAACG;AAFd,OAAP;;AAKF,SAAKnB,KAAK,CAACoB,WAAX;AACE;;AAEF;AACE,aAAOL,KAAP;AAZJ;AAcD,CAhBM","sourcesContent":["import {types} from \"../types/types\";\nimport moment from 'moment';\n\n\nconst initialState = {\n  events:[{\n    title: 'Birthday',\n    start: moment().toDate(),\n    end: moment().add(2, 'hours').toDate(),\n    notes:'Buy cake', \n    user:{\n      _id:'123', \n      name:'Fer'\n    }\n  }], \n  activeEvent:null\n};\n\n\n\nexport const calReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case types.eventSetActive:\n      return {\n          ...state, \n        activeEvent:action.payload\n      }\n\n    case types.eventAddNew:\n      return\n\n    default:\n      return state\n  }\n};\n"]},"metadata":{},"sourceType":"module"}