{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/f/Documents/curso-react/09-calendar-app/src/components/calendar/CalendarScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navbar } from '../ui/Navbar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messagges';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nmoment.locale('en');\nconst localizer = momentLocalizer(moment);\nconst events = [{\n  title: 'Birthday',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor: '#fafafa',\n  notes: 'Buy cake',\n  user: {\n    _id: '123',\n    name: 'Fer'\n  }\n}];\nexport const CalendarScreen = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  const onDoubleClick = e => {\n    dispatch(uiOpenModal(e));\n    console.log(e);\n  };\n\n  const onSelectEvent = e => {\n    dispatch(uiOpenModal(e));\n    console.log(e);\n  };\n\n  const onViewChange = e => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    //console.log(event, start, end, isSelected)\n    const style = {\n      backgroundColor: '#367cf7',\n      borderRadius: '10px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    };\n    return {\n      style\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      messages: messages,\n      eventPropGetter: eventStyleGetter,\n      onDoubleClickEvent: onDoubleClick,\n      onSelectEvent: onSelectEvent,\n      onView: onViewChange,\n      view: lastView,\n      components: {\n        event: CalendarEvent\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CalendarScreen, \"gJXw0YZsy8sC0VoI0+cZqmlZabs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CalendarScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScreen\");","map":{"version":3,"sources":["/home/f/Documents/curso-react/09-calendar-app/src/components/calendar/CalendarScreen.js"],"names":["React","useState","Navbar","Calendar","momentLocalizer","moment","messages","CalendarEvent","CalendarModal","useDispatch","uiOpenModal","locale","localizer","events","title","start","toDate","end","add","bgcolor","notes","user","_id","name","CalendarScreen","dispatch","lastView","setLastView","localStorage","getItem","onDoubleClick","e","console","log","onSelectEvent","onViewChange","setItem","eventStyleGetter","event","isSelected","style","backgroundColor","borderRadius","opacity","display","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Navbar} from '../ui/Navbar';\nimport {Calendar, momentLocalizer, } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'react-big-calendar/lib/css/react-big-calendar.css' ;\nimport {messages} from '../../helpers/calendar-messagges';\nimport {CalendarEvent} from './CalendarEvent';\nimport {CalendarModal} from './CalendarModal';\nimport {useDispatch} from 'react-redux';\nimport {uiOpenModal} from '../../actions/ui';\n\nmoment.locale('en')\n\nconst localizer = momentLocalizer(moment)\n\nconst events = [{\n  title: 'Birthday',\n  start: moment().toDate(),\n  end: moment().add(2, 'hours').toDate(),\n  bgcolor:'#fafafa', \n  notes:'Buy cake', \n  user:{\n    _id:'123', \n    name:'Fer'\n  }, \n}];\n\n\n\nexport const CalendarScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView')||'month');\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal(e))\n    console.log(e)};\n\n  const onSelectEvent= (e) => {\n    dispatch(uiOpenModal(e))\n    console.log(e)};\n\n  const onViewChange = (e) => {\n    setLastView(e)\n    localStorage.setItem('lastView', e)};\n\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n\n    //console.log(event, start, end, isSelected)\n    const style = {\n      backgroundColor:'#367cf7', \n      borderRadius:'10px', \n      opacity:0.8, \n      display:'block', \n      color:'white'\n    };\n\n    return {\n      style\n    }\n  };\n\n\n\n  return (\n    <div className='calendar-screen'>\n      <Navbar/>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        components={{\n          event:CalendarEvent}}\n      />\n      \n      <CalendarModal/>\n    </div>\n  )}\n"]},"metadata":{},"sourceType":"module"}