{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/f/Documents/curso-react/05-hook-app/src/components/06-memos/MemoHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useCounter from '../../hooks/useCounter';\nimport '../02-useEffect/effects.css';\n\nconst MemoHook = () => {\n  _s();\n\n  const {\n    counter,\n    increase\n  } = useCounter(5000);\n  const [show, setShow] = useState(true);\n\n  const heavyProcess = iteraciones => {\n    for (let i = 0; i < iteraciones; i++) {\n      console.log('ahi vamos');\n    }\n\n    return `${iteraciones} iteraciones realizadas`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MemoHook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Counter: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: heavyProcess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary\",\n      onClick: increase,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary ml-3\",\n      onClick: () => {\n        setShow(!show);\n      },\n      children: \"Rfresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MemoHook, \"Cc+naRzWMy5uXigWUInhCMGykKs=\", false, function () {\n  return [useCounter];\n});\n\n_c = MemoHook;\nexport default MemoHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoHook\");","map":{"version":3,"sources":["/home/f/Documents/curso-react/05-hook-app/src/components/06-memos/MemoHook.js"],"names":["React","useState","useCounter","MemoHook","counter","increase","show","setShow","heavyProcess","iteraciones","i","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,6BAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAsBH,UAAU,CAAC,IAAD,CAAtC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;;AAGA,QAAMO,YAAY,GAAIC,WAAD,IAAiB;AAEpC,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,WAAd,EAA0BC,CAAC,EAA3B,EAA8B;AAE1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEH;;AAED,WAAQ,GAAEH,WAAY,yBAAtB;AAED,GAVD;;AAaA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,2CAAa;AAAA,kBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA,gBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,OAAO,EAAEH,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAcE;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AAEbE,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAyBE,CA5CJ;;GAAMH,Q;UAEwBD,U;;;KAFxBC,Q;AA8CN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport useCounter from '../../hooks/useCounter';\nimport '../02-useEffect/effects.css' ;\n\nconst MemoHook = () => {\n\n  const {counter, increase} = useCounter(5000);\n  const [show, setShow] = useState(true);\n\n\n  const heavyProcess = (iteraciones) => {\n\n    for(let i=0;i<iteraciones;i++){\n\n        console.log('ahi vamos')\n\n    }\n\n    return `${iteraciones} iteraciones realizadas`;\n\n  };\n\n\n  return (\n    <>\n      <h1>MemoHook</h1>\n\n      <h2>Counter: <small>{counter}</small> </h2>\n\n      <p>{heavyProcess}</p>\n\n      <button\n        className='btn btn-outline-primary'\n        onClick={increase}\n      >\n        +\n      </button>\n\n      <button\n        className='btn btn-outline-primary ml-3'\n        onClick={() => {\n\n          setShow(!show);\n        }}\n      >\n        Rfresh\n      </button>\n    </>\n  )}\n\nexport default MemoHook;\n"]},"metadata":{},"sourceType":"module"}