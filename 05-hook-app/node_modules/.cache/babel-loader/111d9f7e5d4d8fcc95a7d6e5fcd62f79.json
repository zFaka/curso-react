{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/f/Documents/curso-react/05-hook-app/src/components/08-useReducer/TodoAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport useForm from '../../hooks/useForm';\n\nconst TodoAdd = ({\n  handleAddTodo\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [{\n    description\n  }, handleInputChange, reset] = useForm({\n    description: ''\n  });\n\n  const handleSubmit = e => {\n    //Esto evita que recargue la pagina una vez hecho el submit\n    e.preventDefault();\n\n    if (description.trim().length <= 1) {\n      return;\n    }\n\n    const newTodo = {\n      id: new Date().getTime(),\n      desc: description,\n      done: false\n    };\n    handleAddTodo(newTodo);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        className: \"form-control rounded\",\n        autoComplete: \"off\",\n        value: description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), show && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoAdd, \"Hy3joPrlWlHQh5tELlEdRuINzMM=\", false, function () {\n  return [useForm];\n});\n\n_c = TodoAdd;\nexport default TodoAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoAdd\");","map":{"version":3,"sources":["/home/f/Documents/curso-react/05-hook-app/src/components/08-useReducer/TodoAdd.js"],"names":["React","useState","useForm","TodoAdd","handleAddTodo","show","setShow","description","handleInputChange","reset","handleSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AAInC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AAGA,QAAM,CAAC;AAACM,IAAAA;AAAD,GAAD,EAAgBC,iBAAhB,EAAmCC,KAAnC,IAA4CP,OAAO,CAAC;AAExDK,IAAAA,WAAW,EAAC;AAF4C,GAAD,CAAzD;;AAOA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAE1B;AAEAA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGL,WAAW,CAACM,IAAZ,GAAmBC,MAAnB,IAA6B,CAAhC,EAAkC;AAAC;AAAO;;AAE1C,UAAMC,OAAO,GAAG;AAEdC,MAAAA,EAAE,EAAC,IAAIC,IAAJ,GAAWC,OAAX,EAFW;AAGdC,MAAAA,IAAI,EAACZ,WAHS;AAIda,MAAAA,IAAI,EAAE;AAJQ,KAAhB;AAOAhB,IAAAA,aAAa,CAACW,OAAD,CAAb;AAEAN,IAAAA,KAAK;AACN,GAlBD;;AAsBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAE,aAFR;AAGE,QAAA,SAAS,EAAC,sBAHZ;AAIE,QAAA,YAAY,EAAC,KAJf;AAKE,QAAA,KAAK,EAAEH,WALT;AAME,QAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,cADF,EAUGH,IAAI,iBAED;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBE,CA3DJ;;GAAMF,O;UAO8CD,O;;;KAP9CC,O;AA6DN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport './styles.css' ;\nimport useForm from '../../hooks/useForm';\n\nconst TodoAdd = ({handleAddTodo}) => {\n\n\n\n  const [show, setShow] = useState(false);\n\n  \n  const [{description}, handleInputChange, reset] = useForm({\n\n    description:''\n  });\n\n\n\n  const handleSubmit = (e) => {\n\n    //Esto evita que recargue la pagina una vez hecho el submit\n\n    e.preventDefault();\n\n    if(description.trim().length <= 1){return}\n\n    const newTodo = {\n\n      id:new Date().getTime(), \n      desc:description, \n      done: false\n    };\n\n    handleAddTodo(newTodo);\n\n    reset();\n  }\n\n\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input \n          type='text'\n          name= 'description'\n          className='form-control rounded'\n          autoComplete='off'\n          value={description}\n          onChange={handleInputChange}\n        />\n        {\n         show \n          && \n            <button \n              className='btn btn-primary'\n              type='submit'\n            >\n              + \n            </button>\n        }\n      </form>\n    </>\n  )}\n\nexport default TodoAdd;\n"]},"metadata":{},"sourceType":"module"}