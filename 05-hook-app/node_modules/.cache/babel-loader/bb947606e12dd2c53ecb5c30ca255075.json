{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/f/Documents/curso-react/05-hook-app/src/components/08-useReducer/TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport './styles.css';\nimport { todoReducer } from './todoReducer';\nimport useForm from '../../hooks/useForm';\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem('todos')) || [];\n};\n\nconst TodoApp = () => {\n  _s();\n\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\n  const [{\n    description\n  }, handleInputChange, reset] = useForm({\n    description: ''\n  }); // Should jsonite the objecto to can storage\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const handleSubmit = e => {\n    //Esto evita que recargue la pagina una vez hecho el submit\n    e.preventDefault();\n    console.log('Trough submit now');\n\n    if (description.trim().length <= 1) {\n      return;\n    }\n\n    const newTodo = {\n      id: new Date().getTime(),\n      desc: description,\n      done: false\n    };\n    const addTodoAction = {\n      type: 'add',\n      payload: newTodo\n    };\n    dispatch(addTodoAction);\n    reset();\n  }; //<p className='text-center complete'>{++i}  {todo.desc}</p>\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Remaining Tasks: \", todos.length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: todos.map((todo, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: [++i, \"\\u2003\", todo.desc]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: handleClickDel,\n              children: \"Del\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            className: \"form-control\",\n            autoComplete: \"off\",\n            value: description,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-1 btn-block\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoApp, \"ALGF6aPgsz7ZSKuN3VdKcNiUIPM=\", false, function () {\n  return [useForm];\n});\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["/home/f/Documents/curso-react/05-hook-app/src/components/08-useReducer/TodoApp.js"],"names":["React","useEffect","useReducer","todoReducer","useForm","init","JSON","parse","localStorage","getItem","TodoApp","todos","dispatch","description","handleInputChange","reset","setItem","stringify","handleSubmit","e","preventDefault","console","log","trim","length","newTodo","id","Date","getTime","desc","done","addTodoAction","type","payload","map","todo","i","handleClickDel"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEjB,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAApD;AACD,CAHD;;AAKA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACC,WAAD,EAAc,EAAd,EAAkBE,IAAlB,CAApC;AAGA,QAAM,CAAC;AAACQ,IAAAA;AAAD,GAAD,EAAgBC,iBAAhB,EAAmCC,KAAnC,IAA4CX,OAAO,CAAC;AAEtDS,IAAAA,WAAW,EAAC;AAF0C,GAAD,CAAzD,CALoB,CAYpB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AAEdO,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAeN,KAAf,CAA9B;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAOA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAGA,QAAGT,WAAW,CAACU,IAAZ,GAAmBC,MAAnB,IAA6B,CAAhC,EAAkC;AAAC;AAAO;;AAG1C,UAAMC,OAAO,GAAG;AAEdC,MAAAA,EAAE,EAAC,IAAIC,IAAJ,GAAWC,OAAX,EAFW;AAGdC,MAAAA,IAAI,EAAChB,WAHS;AAIdiB,MAAAA,IAAI,EAAE;AAJQ,KAAhB;AAQA,UAAMC,aAAa,GAAG;AAEpBC,MAAAA,IAAI,EAAC,KAFe;AAGpBC,MAAAA,OAAO,EAACR;AAHY,KAAtB;AAMAb,IAAAA,QAAQ,CAACmB,aAAD,CAAR;AAEAhB,IAAAA,KAAK;AACN,GA3BD,CApBoB,CAmDpB;;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,sCAAsBJ,KAAK,CAACa,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,oBAEIb,KAAK,CAACuB,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBAER;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAAA,oCAIE;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA,yBAA4B,EAAEA,CAA9B,YAAuCD,IAAI,CAACN,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAME;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,OAAO,EAAEQ,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA,aACOF,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAyBE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BAEE;AAAM,UAAA,QAAQ,EAAER,YAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAE,aAFR;AAGE,YAAA,SAAS,EAAC,cAHZ;AAIE,YAAA,YAAY,EAAC,KAJf;AAKE,YAAA,KAAK,EAAEL,WALT;AAME,YAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AACE,YAAA,SAAS,EAAC,gCADZ;AAEE,YAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAsDE,CA3GJ;;GAAMJ,O;UAK8CN,O;;;KAL9CM,O;AA6GN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useReducer} from 'react';\nimport './styles.css' ;\nimport {todoReducer} from './todoReducer';\nimport useForm from '../../hooks/useForm';\n\nconst init = () => {\n\n  return JSON.parse(localStorage.getItem('todos')) || [];\n};\n\nconst TodoApp = () => {\n\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\n\n\n  const [{description}, handleInputChange, reset] = useForm({\n\n      description:''\n  });\n\n\n\n  // Should jsonite the objecto to can storage\n  useEffect(() => {\n\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n\n\n  const handleSubmit = (e) => {\n    //Esto evita que recargue la pagina una vez hecho el submit\n    e.preventDefault();\n\n    console.log('Trough submit now');\n\n\n    if(description.trim().length <= 1){return}\n\n\n    const newTodo = {\n\n      id:new Date().getTime(), \n      desc:description, \n      done: false\n    };\n\n\n    const addTodoAction = {\n\n      type:'add', \n      payload:newTodo\n    };\n\n    dispatch(addTodoAction);\n\n    reset();\n  };\n\n\n\n  //<p className='text-center complete'>{++i}  {todo.desc}</p>\n\n  return (\n    <>\n      <h1>TodoApp</h1> \n\n      <h4>Remaining Tasks: {todos.length} </h4>\n\n      <div className='row'>\n\n        <div className='col-7'>\n          <ul className='list-group list-group-flush'>\n            {\n              todos.map((todo, i)=>(\n\n                <li\n                  key={todo.id}\n                  className='list-group-item'\n                >\n                  <p className='text-center'>{++i}&emsp;{todo.desc}</p>\n\n                  <button \n                    className='btn btn-danger'\n                    onClick={handleClickDel}\n                  >\n                    Del\n                  </button>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n\n        <div className='col-5'>\n\n          <form onSubmit={handleSubmit}>\n            <input \n              type='text'\n              name= 'description'\n              className='form-control'\n              autoComplete='off'\n              value={description}\n              onChange={handleInputChange}\n            />\n\n            <button \n              className='btn btn-primary mt-1 btn-block'\n              type='submit'\n            >\n              Add\n            </button>\n          </form>\n        </div>\n      </div>\n\n    </>\n  )}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}