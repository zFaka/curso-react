{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/f/Documents/curso-react/07-heroes-app/src/routers/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  console.log(rest);\n  localStorage.setItem('lastPath', rest.location.pathname);\n  return (\n    /*#__PURE__*/\n    // Le pasamos las props history, path, data\n    // mediante el uso de ...rest\n    _jsxDEV(Route, { ...rest,\n      // props === ...rest\n      component: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/f/Documents/curso-react/07-heroes-app/src/routers/PrivateRoute.js"],"names":["React","Redirect","Route","PropTypes","PrivateRoute","isAuthenticated","component","Component","rest","console","log","localStorage","setItem","location","pathname","props","propTypes","bool","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,SAAS,EAACC,SAHU;AAIpB,KAAGC;AAJiB,CAAD,KAMf;AAEJC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAACK,QAAL,CAAcC,QAA/C;AAGA;AAAA;AACE;AACA;AACA,YAAC,KAAD,OAAWN,IAAX;AACE;AACA,MAAA,SAAS,EAAGO,KAAD,IACRV,eAAD,gBACI,QAAC,SAAD,OAAeU;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA;AAHF;AAYD,CAzBD;;KAAMX,Y;AA6BNA,YAAY,CAACY,SAAb,GAAyB;AACvBX,EAAAA,eAAe,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADT;AAEvBZ,EAAAA,SAAS,EAAEH,SAAS,CAACgB,IAAV,CAAeD;AAFH,CAAzB;AAKA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({\n\n  isAuthenticated, \n  component:Component, \n  ...rest\n\n}) => {\n\n  console.log(rest)\n\n  localStorage.setItem('lastPath', rest.location.pathname)\n\n\n  return (\n    // Le pasamos las props history, path, data\n    // mediante el uso de ...rest\n    <Route {...rest}\n      // props === ...rest\n      component={(props)=>(\n        (isAuthenticated)\n          ? <Component {...props}/>\n          : <Redirect to='/login'/>\n      )}\n    />\n  )\n}\n\n\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired, \n  component: PropTypes.func.isRequired}\n\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}