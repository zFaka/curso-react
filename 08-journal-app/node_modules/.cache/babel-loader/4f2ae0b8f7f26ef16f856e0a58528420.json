{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    }; // doc is the Document Reference from Firbase Database\n\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, note));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUpLoading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading. .  .',\n      text: 'Cool people is patience',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});","map":{"version":3,"sources":["/home/f/Documents/curso-react/08-journal-app/src/actions/notes.js"],"names":["Swal","db","fileUpload","loadNotes","types","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","note","type","notesActive","payload","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update","refreshNote","fire","notesUpdated","startUpLoading","file","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startDeleting","delete","deleteNote","notesDelete"],"mappings":"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","sourcesContent":["import Swal from \"sweetalert2\";\nimport {db} from \"../firebase/firebase-config\";\nimport {fileUpload} from \"../helpers/fileUpload\";\nimport {loadNotes} from \"../helpers/loadNotes\";\nimport {types} from \"../types/types\";\n\nexport const startNewNote = () => {\n\n  return async(dispatch, getState) => {\n\n    const uid = getState().auth.uid; \n\n    const newNote = {\n      title:'', \n      body: '', \n      date: new Date().getTime()\n    }\n\n    // doc is the Document Reference from Firbase Database\n\n    const doc = await db.collection(`${uid}/journal/notes`)\n      .add(newNote)\n\n    dispatch(activeNote(doc.id, newNote))\n  }\n}\n\n\n\nexport const activeNote = (id, note) => ({\n\n  type:types.notesActive, \n  payload:{\n    id,\n    ...note\n  }\n});\n\n\n\nexport const startLoadingNotes = (uid) => {\n  return async(dispatch) => {\n\n    const notes = await loadNotes(uid)\n    dispatch(setNotes(notes))}\n}\n\n\n\nexport const setNotes = (notes) => ({\n\n  type:types.notesLoad, \n  payload:notes\n})\n\n\n\nexport const startSaveNote = (note) => {\n\n  return async(dispatch, getState) => {\n\n    const {uid} = getState().auth; \n    if(!note.url){delete note.url}\n    const noteToFirestore = {...note};\n    delete noteToFirestore.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n    dispatch(refreshNote(note.id, note))\n    Swal.fire('Saved', note.title, 'success')\n  }\n}\n\n\nexport const refreshNote = (id, note) => ({\n\n  type:types.notesUpdated, \n  payload:{\n    id, \n    note:{\n      id, \n      ...note\n    }\n  }\n})\n\n\n\nexport const startUpLoading = (file) => {\n\n  return async(dispatch, getState) => {\n\n    const {active:activeNote} = getState().notes;\n\n    Swal.fire({\n      title:'Uploading. .  .', \n      text:'Cool people is patience', \n      allowOutsideClick: false, \n      onBeforeOpen:() => {\n\n        Swal.showLoading()\n      }\n    })\n\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl\n    dispatch(startSaveNote(activeNote))\n    Swal.close()\n  }\n}\n\n\n\nexport const startDeleting = (id) => {\n\n  return async(dispatch, getState) => {\n\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete()\n    \n    dispatch(deleteNote(id))\n  }\n};\n\n\n\nexport const deleteNote = (id) => ({\n    \n    type:types.notesDelete, \n    payload:id\n});\n"]},"metadata":{},"sourceType":"module"}