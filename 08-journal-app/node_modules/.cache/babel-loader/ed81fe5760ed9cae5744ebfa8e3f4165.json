{"ast":null,"code":"var _jsxFileName = \"/home/f/Documents/curso-react/08-journal-app/src/routers/AppRouter.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user === null || user === void 0 ? void 0 : user.uid) {\n        dispatch(login(user.uid, user.displayName));\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth\",\n    component: AuthRouter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: JournalScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/f/Documents/curso-react/08-journal-app/src/routers/AppRouter.js"],"names":["React","BrowserRouter","Router","Switch","Route","Redirect","AuthRouter","JournalScreen","useEffect","firebase","useDispatch","login","AppRouter","dispatch","auth","onAuthStateChanged","user","uid","displayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,QAJJ,QAKO,kBALP;AAOA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,KAAR,QAAoB,iBAApB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAE3B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AAEZC,IAAAA,QAAQ,CAACK,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AACzC,UAAGA,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEC,GAAT,EAAa;AACTJ,QAAAA,QAAQ,CAACF,KAAK,CAACK,IAAI,CAACC,GAAN,EAAWD,IAAI,CAACE,WAAhB,CAAN,CAAR;AACH;AACJ,KAJD;AAKH,GAPQ,EAON,CAACL,QAAD,CAPM,CAAT;AAUA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAGP,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAC,GAFT;AAGI,IAAA,SAAS,EAAGC,aAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAYI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,CADJ,CADJ;AAsBH,CApCM","sourcesContent":["import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport {useEffect} from 'react';\nimport firebase from 'firebase/app';\nimport {useDispatch} from 'react-redux';\nimport {login} from '../actions/auth';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        firebase.auth().onAuthStateChanged((user) => {\n            if(user?.uid){\n                dispatch(login(user.uid, user.displayName))\n            }\n        });\n    }, [dispatch])\n\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}