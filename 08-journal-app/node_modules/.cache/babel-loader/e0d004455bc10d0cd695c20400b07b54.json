{"ast":null,"code":"var _jsxFileName = \"/home/f/Documents/curso-react/08-journal-app/src/routers/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  // Is for see the props of rest and search inside\n  //console.log(rest)\n  localStorage.setItem('lastPath', rest.location.pathname);\n  return (\n    /*#__PURE__*/\n    // Le pasamos las props history, path, data\n    // mediante el uso de ...rest\n    React.createElement(Route, Object.assign({}, rest, {\n      // props === ...rest\n      component: props => isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }))\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/f/Documents/curso-react/08-journal-app/src/routers/PrivateRoute.js"],"names":["React","Redirect","Route","PropTypes","PrivateRoute","isAuthenticated","component","Component","rest","localStorage","setItem","location","pathname","props","propTypes","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,SAAS,EAACC,SAHU;AAIpB,KAAGC;AAJiB,CAAD,KAMf;AAEJ;AACA;AAEAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACG,QAAL,CAAcC,QAA/C;AAGA;AAAA;AACE;AACA;AACA,wBAAC,KAAD,oBAAWJ,IAAX;AACE;AACA,MAAA,SAAS,EAAGK,KAAD,IACRR,eAAD,gBACI,oBAAC,SAAD,oBAAeQ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,gBAEI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAYD,CA1BD;;AA8BAT,YAAY,CAACU,SAAb,GAAyB;AACvBT,EAAAA,eAAe,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADT;AAEvBV,EAAAA,SAAS,EAAEH,SAAS,CAACc,IAAV,CAAeD;AAFH,CAAzB;AAKA,eAAeZ,YAAf","sourcesContent":["import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({\n\n  isAuthenticated, \n  component:Component, \n  ...rest\n\n}) => {\n\n  // Is for see the props of rest and search inside\n  //console.log(rest)\n\n  localStorage.setItem('lastPath', rest.location.pathname)\n\n\n  return (\n    // Le pasamos las props history, path, data\n    // mediante el uso de ...rest\n    <Route {...rest}\n      // props === ...rest\n      component={(props)=>(\n        (isAuthenticated)\n          ? <Component {...props}/>\n          : <Redirect to='/login'/>\n      )}\n    />\n  )\n}\n\n\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired, \n  component: PropTypes.func.isRequired}\n\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}