{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    }; // doc is the Document Reference from Firbase Database\n\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, note));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUpLoading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading. .  .',\n      text: 'Cool people is patience',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});\nexport const logoutNote = () => ({\n  type: types.notesLogoutClean\n});","map":{"version":3,"sources":["/home/f/Documents/curso-react/08-journal-app/src/actions/notes.js"],"names":["Swal","db","fileUpload","loadNotes","types","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","addNewNote","note","type","notesActive","payload","notesAddNew","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update","refreshNote","fire","notesUpdated","startUpLoading","file","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startDeleting","delete","deleteNote","notesDelete","logoutNote","notesLogoutClean"],"mappings":"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","sourcesContent":["import Swal from \"sweetalert2\";\nimport {db} from \"../firebase/firebase-config\";\nimport {fileUpload} from \"../helpers/fileUpload\";\nimport {loadNotes} from \"../helpers/loadNotes\";\nimport {types} from \"../types/types\";\n\nexport const startNewNote = () => {\n\n  return async(dispatch, getState) => {\n\n    const uid = getState().auth.uid; \n\n    const newNote = {\n      title:'', \n      body: '', \n      date: new Date().getTime()\n    }\n\n    // doc is the Document Reference from Firbase Database\n\n    const doc = await db.collection(`${uid}/journal/notes`)\n      .add(newNote)\n\n    dispatch(activeNote(doc.id, newNote))\n    dispatch(addNewNote(doc.id, newNote))\n  }\n}\n\n\n\nexport const activeNote = (id, note) => ({\n\n  type:types.notesActive, \n  payload:{\n    id,\n    ...note\n  }\n});\n\n\n\nexport const addNewNote = (id, note) => ({\n  type:types.notesAddNew, \n  payload:{\n      id, ...note\n  }\n})\n\n\n\nexport const startLoadingNotes = (uid) => {\n  return async(dispatch) => {\n\n    const notes = await loadNotes(uid)\n    dispatch(setNotes(notes))}\n}\n\n\n\nexport const setNotes = (notes) => ({\n\n  type:types.notesLoad, \n  payload:notes\n})\n\n\n\nexport const startSaveNote = (note) => {\n\n  return async(dispatch, getState) => {\n\n    const {uid} = getState().auth; \n    if(!note.url){delete note.url}\n    const noteToFirestore = {...note};\n    delete noteToFirestore.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n    dispatch(refreshNote(note.id, note))\n    Swal.fire('Saved', note.title, 'success')\n  }\n}\n\n\nexport const refreshNote = (id, note) => ({\n\n  type:types.notesUpdated, \n  payload:{\n    id, \n    note:{\n      id, \n      ...note\n    }\n  }\n})\n\n\n\nexport const startUpLoading = (file) => {\n\n  return async(dispatch, getState) => {\n\n    const {active:activeNote} = getState().notes;\n\n    Swal.fire({\n      title:'Uploading. .  .', \n      text:'Cool people is patience', \n      allowOutsideClick: false, \n      onBeforeOpen:() => {\n\n        Swal.showLoading()\n      }\n    })\n\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl\n    dispatch(startSaveNote(activeNote))\n    Swal.close()\n  }\n}\n\n\n\nexport const startDeleting = (id) => {\n\n  return async(dispatch, getState) => {\n\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete()\n\n    dispatch(deleteNote(id))\n  }\n};\n\n\n\nexport const deleteNote = (id) => ({\n\n  type:types.notesDelete, \n  payload:id\n});\n\n\n\nexport const logoutNote = () => ({\n  type:types.notesLogoutClean, \n})\n"]},"metadata":{},"sourceType":"module"}