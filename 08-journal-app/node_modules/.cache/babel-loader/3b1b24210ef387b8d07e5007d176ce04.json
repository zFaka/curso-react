{"ast":null,"code":"var _jsxFileName = \"/home/f/Documents/curso-react/08-journal-app/src/components/auth/RegisterScreen.js\";\nimport React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delError, setError } from '../../actions/ui';\nimport { startRegEmailPassName } from '../../actions/auth';\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    msgError\n  } = useSelector(state => state.ui);\n  console.log(msgError);\n  const [formValues, handleInputChange] = useForm({\n    name: 'Henri',\n    email: 'nandito@gmail.com',\n    password: '123456',\n    password2: '123456'\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formValues;\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startRegEmailPassName(name, email, password));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(setError('!name'));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError('!mail'));\n      return false;\n    } else if (password !== password2 || password.length < 5) {\n      dispatch(setError('!pass'));\n      return false;\n    }\n\n    dispatch(delError());\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"auth__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, msgError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth__alert-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, msgError), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    className: \"auth__input\",\n    autoComplete: \"off\",\n    value: name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    className: \"auth__input\",\n    autoComplete: \"off\",\n    value: email,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    className: \"auth__input\",\n    value: password,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    name: \"password2\",\n    className: \"auth__input\",\n    value: password2,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-block mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth/login\",\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Already registered?\")));\n};","map":{"version":3,"sources":["/home/f/Documents/curso-react/08-journal-app/src/components/auth/RegisterScreen.js"],"names":["React","validator","Link","useForm","useDispatch","useSelector","delError","setError","startRegEmailPassName","RegisterScreen","dispatch","msgError","state","ui","console","log","formValues","handleInputChange","name","email","password","password2","handleRegister","e","preventDefault","isFormValid","trim","length","isEmail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport {useForm} from '../../hooks/useForm';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {delError, setError} from '../../actions/ui';\nimport {startRegEmailPassName} from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n\n    const dispatch = useDispatch()\n\n    const {msgError} = useSelector( state => state.ui);\n    console.log(msgError)\n\n    const [formValues, handleInputChange] = useForm({\n        name:'Henri', \n        email:'nandito@gmail.com', \n        password:'123456', \n        password2:'123456'\n    });\n\n    const {name, email, password, password2} = formValues;\n\n\n\n    const handleRegister = (e) => {\n\n        e.preventDefault();\n        if(isFormValid()){\n            dispatch(startRegEmailPassName(name, email, password))\n        }\n    };\n\n\n\n    const isFormValid = () => {\n\n\n        if(name.trim().length === 0){\n            dispatch(setError('!name'))\n            return false;\n\n        } else if (!validator.isEmail(email)){\n            dispatch(setError('!mail'))\n            return false;\n\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(setError('!pass'))\n            return false\n\n        }\n        dispatch(delError())\n        return true ;\n    };\n\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={handleRegister}>\n\n                {\n                    msgError &&\n                        (\n                            <div className='auth__alert-error'>\n                                {msgError}\n                            </div>\n                        )\n                }\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n\n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}